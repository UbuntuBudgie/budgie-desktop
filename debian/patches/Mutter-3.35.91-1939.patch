From 89fca86572aa2182ef64b487952f7b51f1d9539d Mon Sep 17 00:00:00 2001
From: Marco Trevisan <mail@3v1n0.net>
Date: Fri, 21 Feb 2020 09:24:08 +0100
Subject: [PATCH] Mutter 3.35.91 (#1939)

* vapi: Sync mutter-6 VAPI to 3.35.91

* meson: Set HAVE_MUTTER_5 in such case only, check HAVE_MUTTER_6

Set if we have mutter-5 only if really found, while use HAVE_MUTTER_6 to
check what API we should use.

Origin: https://github.com/solus-project/budgie-desktop/commits/89fca865
---
 src/wm/meson.build         | 2 +-
 src/wm/shim.vala           | 6 +++---
 vapi/libmutter-6.vapi      | 1 -
 vapi/mutter-clutter-6.vapi | 2 ++
 vapi/mutter-cogl-6.vapi    | 9 ---------
 5 files changed, 6 insertions(+), 14 deletions(-)

diff --git a/src/wm/meson.build b/src/wm/meson.build
index 4bcc0f9e..186cf9d2 100644
--- a/src/wm/meson.build
+++ b/src/wm/meson.build
@@ -26,8 +26,8 @@ if not dep_mutter.found()
         vapi_mutter = 'libmutter-4'
     else
         dep_mutter = dependency('libmutter-5', version: gnome_minimum_version, required: false)
-        budgie_wm_status_vala_args += ['-D', 'HAVE_MUTTER_5']
         if dep_mutter.found()
+            budgie_wm_status_vala_args += ['-D', 'HAVE_MUTTER_5']
             message('Using new libmutter-5 ABI from GNOME 3.34')
             vapi_mutter = 'libmutter-5'
         else
diff --git a/src/wm/shim.vala b/src/wm/shim.vala
index d465d469..a174923f 100644
--- a/src/wm/shim.vala
+++ b/src/wm/shim.vala
@@ -191,7 +191,7 @@ public class ShellShim : GLib.Object
         osd_proxy = null;
     }
 
-#if HAVE_MUTTER_5
+#if HAVE_MUTTER_5 || HAVE_MUTTER_6
     private void on_accelerator_activated(uint action, Clutter.InputDevice dev, uint timestamp)
 #else
     private void on_accelerator_activated(uint action, uint device_id, timestamp)
@@ -200,7 +200,7 @@ public class ShellShim : GLib.Object
         foreach (string accelerator in grabs.get_keys ()) {
             if (grabs[accelerator] == action) {
                 var params = new GLib.HashTable<string, Variant> (null, null);
-#if HAVE_MUTTER_5
+#if HAVE_MUTTER_5 || HAVE_MUTTER_6
                 params.set ("device-id", new Variant.uint32 (dev.id));
                 params.set ("action-mode", new Variant.uint32 (action));
                 params.set ("device-mode", new Variant.string (dev.get_device_node()));
@@ -286,7 +286,7 @@ public class ShellShim : GLib.Object
         return ungrab_accelerator (action);
     }
 
-#if HAVE_MUTTER_5
+#if HAVE_MUTTER_5 || HAVE_MUTTER_6
     public bool UngrabAccelerators(BusName sender, uint[] actions)
     {
         foreach (uint action in actions) {
diff --git a/vapi/libmutter-6.vapi b/vapi/libmutter-6.vapi
index 31f4801c..b36be1b7 100644
--- a/vapi/libmutter-6.vapi
+++ b/vapi/libmutter-6.vapi
@@ -368,7 +368,6 @@ namespace Meta {
 		public uint add_idle_watch (uint64 interval_msec, owned Meta.IdleMonitorWatchFunc? callback);
 		public uint add_user_active_watch (owned Meta.IdleMonitorWatchFunc? callback);
 		public static unowned Meta.IdleMonitor get_core ();
-		public static unowned Meta.IdleMonitor get_for_device (Clutter.InputDevice device);
 		public int64 get_idletime ();
 		public void remove_watch (uint id);
 		[NoAccessorMethod]
diff --git a/vapi/mutter-clutter-6.vapi b/vapi/mutter-clutter-6.vapi
index d66f9ac8..0130a93c 100644
--- a/vapi/mutter-clutter-6.vapi
+++ b/vapi/mutter-clutter-6.vapi
@@ -6731,6 +6731,7 @@ namespace Clutter {
 		public virtual unowned Clutter.InputDevice get_pointer ();
 		public void get_pointer_a11y_settings (Clutter.PointerA11ySettings settings);
 		public virtual Clutter.VirtualDeviceType get_supported_virtual_device_types ();
+		public bool get_touch_mode ();
 		public virtual GLib.List<weak Clutter.InputDevice> list_devices ();
 		public void set_kbd_a11y_settings (Clutter.KbdA11ySettings settings);
 		public void set_pointer_a11y_dwell_click_type (Clutter.PointerA11yDwellClickType click_type);
@@ -6738,6 +6739,7 @@ namespace Clutter {
 		public virtual void warp_pointer (int x, int y);
 		[NoAccessorMethod]
 		public Clutter.Backend backend { owned get; construct; }
+		public bool touch_mode { get; }
 		public signal void device_added (Clutter.InputDevice object);
 		public signal void device_removed (Clutter.InputDevice object);
 		public signal void kbd_a11y_flags_changed (uint settings_flags, uint changed_mask);
diff --git a/vapi/mutter-cogl-6.vapi b/vapi/mutter-cogl-6.vapi
index c9ab5d57..195e3b17 100644
--- a/vapi/mutter-cogl-6.vapi
+++ b/vapi/mutter-cogl-6.vapi
@@ -1046,18 +1046,9 @@ namespace Cogl {
 	public static void set_depth_test_enabled (bool setting);
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	[Version (deprecated = true, deprecated_since = "1.16")]
-	public static void shader_compile (Cogl.Handle handle);
-	[CCode (cheader_filename = "cogl/cogl.h")]
-	[Version (deprecated = true, deprecated_since = "1.16")]
-	public static string shader_get_info_log (Cogl.Handle handle);
-	[CCode (cheader_filename = "cogl/cogl.h")]
-	[Version (deprecated = true, deprecated_since = "1.16")]
 	public static Cogl.ShaderType shader_get_type (Cogl.Handle handle);
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	[Version (deprecated = true, deprecated_since = "1.16")]
-	public static bool shader_is_compiled (Cogl.Handle handle);
-	[CCode (cheader_filename = "cogl/cogl.h")]
-	[Version (deprecated = true, deprecated_since = "1.16")]
 	public static void shader_source (Cogl.Handle shader, string source);
 	[CCode (cheader_filename = "cogl/cogl.h")]
 	[Version (deprecated = true, deprecated_since = "1.18", since = "1.0")]
-- 
2.25.0

