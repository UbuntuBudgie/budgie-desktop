Origin: Commit 3b8099a4f90f624f3b6a6f87def36943bde02478
Author: Staudey <Staudi.Kaos@gmail.com>
Last-Update: 2021-01-02
Description: Use standard mute/unmute methods (#2084)
 Fixes issues like muting with media keys and then trying to unmute via the applet, which would previously not work
---
 src/applets/status/SoundIndicator.vala | 20 +---------
 src/raven/app_sound_control.vala       | 54 ++++----------------------
 2 files changed, 8 insertions(+), 66 deletions(-)

diff --git a/src/applets/status/SoundIndicator.vala b/src/applets/status/SoundIndicator.vala
index 74ce136a..a7b6c81c 100644
--- a/src/applets/status/SoundIndicator.vala
+++ b/src/applets/status/SoundIndicator.vala
@@ -18,8 +18,6 @@ public class SoundIndicator : Gtk.Bin {
 	/** Our mixer */
 	public Gvc.MixerControl mixer { protected set ; public get ; }
 
-	public uint32 unmuted_volume_val = 0;
-
 	/** Default stream */
 	private Gvc.MixerStream? stream;
 
@@ -234,19 +232,7 @@ public class SoundIndicator : Gtk.Bin {
 
 	// toggle_mute_state will toggle the volume between muted and unmuted
 	private void toggle_mute_state() {
-		/**
-		 * You're probably wonder "hey, why aren't you using set_is_muted and get_is_muted"?
-		 * Great question. It doesn't work for toggling these values. Simple.
-		 */
-		bool is_muted = stream.get_volume() == 0;
-
-		if (is_muted) { // If we're muted
-			stream.set_volume(unmuted_volume_val); // Used our old value
-		} else {
-			stream.set_volume(0); // Set to 0
-		}
-
-		Gvc.push_volume(stream);
+		stream.change_is_muted(!stream.get_is_muted());
 	}
 
 	/**
@@ -308,10 +294,6 @@ public class SoundIndicator : Gtk.Bin {
 
 		show_all();
 		queue_draw();
-
-		if (stream.get_volume() != 0) { // If we haven't muted
-			unmuted_volume_val = stream.get_volume(); // Get our new volume
-		}
 	}
 
 	/**
diff --git a/src/raven/app_sound_control.vala b/src/raven/app_sound_control.vala
index 711e805d..0d8e3454 100644
--- a/src/raven/app_sound_control.vala
+++ b/src/raven/app_sound_control.vala
@@ -19,8 +19,6 @@ namespace Budgie {
 		private Gtk.Label? app_label = null;
 		private Gtk.Button? app_mute_button = null;
 		private Gtk.Scale? volume_slider = null;
-		private bool manually_toggled_mute = false;
-		private bool is_pre_muted = false;
 		private uint32? volume;
 
 		private Gtk.Image? audio_not_muted = null;
@@ -46,8 +44,6 @@ namespace Budgie {
 			stream = c_stream;
 			app_name = c_name;
 
-			is_pre_muted = volume_at_mute_threshold();
-
 			/**
 			 * App Desktop Logic
 			 * Firstly, check if the app name has a related desktop app info, and if so use the desktop name for the application.
@@ -102,12 +98,6 @@ namespace Budgie {
 
 			app_mute_button = new Gtk.Button();
 
-			if (is_pre_muted) { // If this app is already in a muted state
-				if (stream.set_volume(0)) { // If we're technically at the threshold but may not be 0, set it to 0
-					Gvc.push_volume(stream);
-				}
-			}
-
 			set_mute_ui();
 
 			app_mute_button.get_style_context().add_class("flat");
@@ -162,15 +152,8 @@ namespace Budgie {
 
 			volume = stream_vol;
 
-			if (!manually_toggled_mute) { // If we haven't manually toggled mute
-				if (stream.set_volume(stream_vol)) {
-					Gvc.push_volume(stream);
-
-					if (is_pre_muted) { // is_pre_muted at the time of sliding
-						is_pre_muted = false;
-						set_mute_ui();
-					}
-				}
+			if (stream.set_volume(stream_vol)) {
+				Gvc.push_volume(stream);
 			}
 
 			SignalHandler.unblock(volume_slider, scale_id);
@@ -201,7 +184,6 @@ namespace Budgie {
 			}
 
 			volume = vol;
-			is_pre_muted = volume_at_mute_threshold(); // Update our muted value
 			set_mute_ui(); // Ensure we have an updated mute
 		}
 
@@ -209,41 +191,19 @@ namespace Budgie {
 		 * set_mute_ui will set the image for the app_mute_button and change dim state of the input
 		 */
 		private void set_mute_ui() {
-			if (manually_toggled_mute || is_pre_muted) { // Muted
+			if (stream.get_is_muted()) {
 				app_mute_button.set_image(audio_muted);
-			} else { // Not Muted
+			} else {
 				app_mute_button.set_image(audio_not_muted);
 			}
 		}
 
-		/**
-		 * toggle_mute_state will toggle the volume and internal muted state
-		 * This is done because gvc muted value change and tracking is fundamentally broken for apps
-		 */
 		private void toggle_mute_state() {
-			manually_toggled_mute = !manually_toggled_mute; // Invert muted state
-
 			SignalHandler.block(volume_slider, scale_id);
-
-			if (manually_toggled_mute) {
-				stream.set_volume(0);
-			} else {
-				stream.set_volume(volume);
-			}
-
-			Gvc.push_volume(stream);
-			set_mute_ui(); // Update our image
-
+			stream.change_is_muted(!stream.get_is_muted());
+			stream.set_is_muted(!stream.get_is_muted());
+			set_mute_ui();
 			SignalHandler.unblock(volume_slider, scale_id);
 		}
-
-		/**
-		 * volume_at_mute_threadshold will return if the stream volume is at a threshold that it should indicate it is muted
-		 */
-		private bool volume_at_mute_threshold() {
-			var base_vol = this.get_base_volume();
-			var stream_volume = this.stream.get_volume();
-			return (stream_volume <= (base_vol / 20));
-		}
 	}
 }
-- 
2.27.0

