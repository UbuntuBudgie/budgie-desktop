From 10b814fa62bf774ca48e182548d3c6687a852314 Mon Sep 17 00:00:00 2001
From: Joshua Strobl <joshua@streambits.io>
Date: Fri, 6 Mar 2020 05:01:10 +0200
Subject: [PATCH] Fix Workspace Applet allowing more than max supported
 workspace count.

We'll now return a -1 on our WM AppendNewWorkspace if we're rejecting more additions of workspaces, which informs our WorkspaceApplet to not show the + button (even if set to always show) and reject drag actions onto new workspaces.

Resolves #1944.
---
 src/applets/workspaces/WorkspacesApplet.vala | 45 +++++++++++++++-----
 src/wm/wm.vala                               | 13 ++++--
 2 files changed, 43 insertions(+), 15 deletions(-)

diff --git a/src/applets/workspaces/WorkspacesApplet.vala b/src/applets/workspaces/WorkspacesApplet.vala
index 66b8f2a9..680d08e2 100644
--- a/src/applets/workspaces/WorkspacesApplet.vala
+++ b/src/applets/workspaces/WorkspacesApplet.vala
@@ -135,8 +135,14 @@ public class WorkspacesApplet : Budgie.Applet
         add_button.drag_data_received.connect(on_add_button_drag_data_received);
 
         add_button.button_release_event.connect((event) => {
-            wm_proxy.AppendNewWorkspace(event.time);
-            set_current_workspace();
+            int new_index = wm_proxy.AppendNewWorkspace(event.time);
+
+            if (new_index != -1) {
+                set_current_workspace();
+            } else if (!below_max_workspace_count()) { // Last workspace
+                add_button_revealer.set_reveal_child(false); // Hide add button
+            }
+
             return false;
         });
 
@@ -157,8 +163,11 @@ public class WorkspacesApplet : Budgie.Applet
                 return false;
             }
 
-            add_button_revealer.set_transition_type(show_transition);
-            add_button_revealer.set_reveal_child(true);
+            if (below_max_workspace_count()) { // Is below max workspace count
+                add_button_revealer.set_transition_type(show_transition);
+                add_button_revealer.set_reveal_child(true);
+            }
+
             return false;
         });
 
@@ -205,7 +214,8 @@ public class WorkspacesApplet : Budgie.Applet
         }
 
         button_visibility = (AddButtonVisibility)settings.get_enum(key);
-        add_button_revealer.set_reveal_child(button_visibility == AddButtonVisibility.ALWAYS);
+
+        add_button_revealer.set_reveal_child(((button_visibility == AddButtonVisibility.ALWAYS) && below_max_workspace_count()));
     }
 
     private void populate_workspaces()
@@ -242,6 +252,10 @@ public class WorkspacesApplet : Budgie.Applet
         }
     }
 
+    private bool below_max_workspace_count() {
+        return (wnck_screen.get_workspace_count() < 8);
+    }
+
     private void connect_signals()
     {
         wnck_connections += wnck_screen.workspace_created.connect(workspace_added);
@@ -282,6 +296,10 @@ public class WorkspacesApplet : Budgie.Applet
         revealer.show_all();
         workspaces_layout.pack_start(revealer, true, true, 0);
         revealer.set_reveal_child(true);
+
+        if (!below_max_workspace_count()) {
+            add_button_revealer.set_reveal_child(false);
+        }
     }
 
     private void workspace_removed(Wnck.Workspace space)
@@ -299,6 +317,8 @@ public class WorkspacesApplet : Budgie.Applet
                 break;
             }
         }
+
+        add_button_revealer.set_reveal_child(true);
     }
 
     private void window_opened(Wnck.Window window)
@@ -358,12 +378,15 @@ public class WorkspacesApplet : Budgie.Applet
             if (data != null) {
                 Wnck.Window window = Wnck.Window.@get(*data);
                 int index = wm_proxy.AppendNewWorkspace(time);
-                dynamically_created_workspaces.append(index);
-                GLib.Timeout.add(50, () => {
-                    window.move_to_workspace(wnck_screen.get_workspace(index));
-                    return false;
-                });
-                dnd_success = true;
+
+                if (index != -1) { // Successfully added workspace
+                    dynamically_created_workspaces.append(index);
+                    GLib.Timeout.add(50, () => {
+                        window.move_to_workspace(wnck_screen.get_workspace(index));
+                        return false;
+                    });
+                    dnd_success = true;
+                }
             }
         }
 
diff --git a/src/wm/wm.vala b/src/wm/wm.vala
index bb46cd06..e1695049 100644
--- a/src/wm/wm.vala
+++ b/src/wm/wm.vala
@@ -1406,11 +1406,16 @@ public class BudgieWMDBUS : GLib.Object
         wsm.remove_workspace(workspace, time);
     }
 
-    public int AppendNewWorkspace(uint32 time)
-    {
+    public int AppendNewWorkspace(uint32 time) {
         unowned Meta.WorkspaceManager wsm = this.wm.get_display().get_workspace_manager();
-        unowned Meta.Workspace? space = wsm.append_new_workspace(false, time);
-        return space.index();
+        int current_count = wsm.get_n_workspaces(); // Get the current count
+
+        if (current_count < 8) {
+            unowned Meta.Workspace? space = wsm.append_new_workspace(false, time);
+            return space.index();
+        }
+
+        return -1;
     }
 
 } /* End BudgieWMDBUS */
-- 
2.17.1

